document.addEventListener("DOMContentLoaded",()=>{const applicationServerKey="BKt+swntut+5W32Psaggm4PVQanqOxsD5PRRt93p+/0c+7AzbWl87hFF184AXo/KlZMazD5eNb1oQVNbK1ti46Y=";if(Notification.permission!=='denied'&&Notification.permission==="default"){Notification.requestPermission(function(permission){if(permission==="granted"){push_subscribe();}
else{push_unsubscribe();}});}
else if(Notification.permission==="granted"){push_updateSubscription();}
else{push_unsubscribe();}
if(!('serviceWorker'in navigator)){console.warn("Service workers are not supported by this browser");return;}
if(!('PushManager'in window)){console.warn('Push notifications are not supported by this browser');return;}
if(!('showNotification'in ServiceWorkerRegistration.prototype)){console.warn('Notifications are not supported by this browser');return;}
if(Notification.permission==='denied'){console.warn('Notifications are denied by the user');return;}
navigator.serviceWorker.register(window.Laravel.serviceWorkerUrl).then(()=>{console.log('[SW] Service worker has been registered');},e=>{console.error('[SW] Service worker registration failed',e);});function urlBase64ToUint8Array(base64String){const padding='='.repeat((4-base64String.length%4)%4);const base64=(base64String+padding).replace(/\-/g,'+').replace(/_/g,'/');const rawData=window.atob(base64);const outputArray=new Uint8Array(rawData.length);for(let i=0;i<rawData.length;++i){outputArray[i]=rawData.charCodeAt(i);}
return outputArray;}
function push_subscribe(){navigator.serviceWorker.ready.then(serviceWorkerRegistration=>serviceWorkerRegistration.pushManager.subscribe({userVisibleOnly:true,applicationServerKey:urlBase64ToUint8Array(applicationServerKey),})).then(subscription=>{return push_sendSubscriptionToServer(subscription,'POST');}).then(subscription=>subscription).catch(e=>{if(Notification.permission==='denied'){console.warn('Notifications are denied by the user.');}else{console.error('Impossible to subscribe to push notifications',e);}});}
function push_updateSubscription(){navigator.serviceWorker.ready.then(serviceWorkerRegistration=>serviceWorkerRegistration.pushManager.getSubscription()).then(subscription=>{if(!subscription){return;}
return push_sendSubscriptionToServer(subscription,'PUT');}).then(subscription=>subscription).catch(e=>{console.error('Error when updating the subscription',e);});}
function push_unsubscribe(){navigator.serviceWorker.ready.then(serviceWorkerRegistration=>serviceWorkerRegistration.pushManager.getSubscription()).then(subscription=>{if(!subscription){return;}
return push_sendSubscriptionToServer(subscription,'DELETE');}).then(subscription=>subscription.unsubscribe()).then(()=>changePushButtonState('disabled')).catch(e=>{console.error('Error when unsubscribing the user',e);});}
function push_sendSubscriptionToServer(subscription,method){const loggedinuser=window.$("#loggedinuser").val();const user_type=window.$("#user_type").val();const key=subscription.getKey('p256dh');const token=subscription.getKey('auth');const contentEncoding=(PushManager.supportedContentEncodings||['aesgcm'])[0];return fetch(window.Laravel.subscription_url,{method,body:JSON.stringify({endpoint:subscription.endpoint,publicKey:key?btoa(String.fromCharCode.apply(null,new Uint8Array(key))):null,authToken:token?btoa(String.fromCharCode.apply(null,new Uint8Array(token))):null,contentEncoding,loggedinuser,user_type}),}).then(()=>subscription);}});